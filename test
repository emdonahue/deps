#!/bin/zsh

source $(dirname "$0")/deps >/dev/null

function assert() {
       if [[ "$2" != "$3" ]]; then
       	   echo "Failure: $1\n\tReceived: $2\n\tExpected: $3"
	   ERR=1
       fi
}

function teardown() {
    cd "$DIR"
    rm -f Makefile a b subdir/a subdir/b
}

#DEPS=$(realpath ./deps)
DEPS=deps
DIR=$(mktemp -d)
trap "rm -rf $DIR" EXIT
mkdir "$DIR/subdir"
cd "$DIR"

#init
"$DEPS" init
[[ -f Makefile ]]
assert 'init creation' $? 0
"$DEPS" init 2>/dev/null
assert 'init already exists' $? 1
teardown

#set
"$DEPS" init
"$DEPS" set a <<< 'touch a'
assert 'set initial' "$(grep -EA1 '^a' Makefile)" "$(echo 'a: \n\ttouch a')"
"$DEPS" set a b <<< 'touch b'
assert 'set reset' "$(grep -EA1 '^a' Makefile)" "$(echo 'a: b\n\ttouch b')"
"$DEPS" unset a
assert 'unset' "$(grep -EA1 '^a' Makefile)" ''
teardown

#rm
"$DEPS" init
"$DEPS" set a <<< 'touch a'
touch a
"$DEPS" rm a
[[ -f a ]]
assert 'rm recipe removed' "$(grep -EA1 '^a' Makefile)" ''
assert 'rm file removed' $? 0
touch a
cd subdir
"$DEPS" set a <<< 'touch a'
"$DEPS" rm ../a
assert 'rm relpath' "$(grep -EA1 '^a' ../Makefile)" ''
teardown

#mv
"$DEPS" init
touch a
"$DEPS" set a <<< 'touch a'
"$DEPS" mv a b
[[ -f b ]]
assert 'mv file' $? 0
assert 'mv recipe' "$(grep -EA1 '^b' Makefile)" "$(echo 'b: \n\ttouch b')"
touch subdir/a
"$DEPS" set subdir/a <<< 'touch subdir/a'
"$DEPS" mv subdir/a subdir/b
[[ -f subdir/b ]]
assert 'mv subdir file' $? 0
assert 'mv subdir recipe' "$(grep -EA1 '^subdir/b' Makefile)" "$(echo 'subdir/b: \n\ttouch subdir/b')"
cd subdir
"$DEPS" mv ../b ../a
assert 'mv relpath' "$(grep -EA1 '^a' ../Makefile)" "$(echo 'a: \n\ttouch a')"
teardown

#add
"$DEPS" init
touch a
print -S 'cat a > b'
"$DEPS" add b > /dev/null
assert 'add' "$(grep -EA1 '^b' Makefile)" "$(echo 'b: a\n\tcat a > b')"
cd subdir
touch a
"$DEPS" add b > /dev/null
assert 'add subdir' "$(grep -EA1 '^subdir/b' ../Makefile)" "$(echo 'subdir/b: subdir/a\n\tcat subdir/a > subdir/b')"
teardown

#comment
"$DEPS" init
"$DEPS" set a <<< 'touch a'
"$DEPS" comment a test comment
assert 'comment' "$("$DEPS" comment a)" 'test comment'
teardown

[[ -z "$ERR" ]] && echo "All Tests Pass"
exit "$ERR"
